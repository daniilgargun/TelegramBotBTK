from aiogram import Router, types
from aiogram.filters import CommandStart
from aiogram.types import Message
from bot.keyboards.keyboards import get_start_keyboard
from bot.services.database import Database
from bot.config import logger

router = Router()
db = Database()

@router.message(CommandStart())
async def command_start_handler(message: Message) -> None:
    user_id = message.from_user.id
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ë–î
        if not await db.user_exists(user_id):
            # –ï—Å–ª–∏ –Ω–µ—Ç - —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            await db.create_user(user_id)
            logger.info(f"–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID: {user_id}")
        
        await message.answer(
            text="üéÑ –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ë–¢–ö.\n\n‚ùÑÔ∏è –ñ–µ–ª–∞—é –≤–∞–º —É—é—Ç–Ω–æ–π –∑–∏–º—ã –∏ —É–¥–æ–±–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –º–µ–Ω—é! ‚òÉÔ∏è\n\n–í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ—é —Ä–æ–ª—å –≤ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫.",
            reply_markup=get_start_keyboard(user_id)
        )
        
    except Exception as e:
        error_msg = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã start: {str(e)}"
        logger.error(error_msg)
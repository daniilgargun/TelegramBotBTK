from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command
import re
from datetime import datetime
import pytz
from random import choice
from bot.services.database import Database
from bot.config import logger
import asyncio

router = Router()

def get_current_year():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –≥–æ–¥–∞ –ø–æ –ú–°–ö"""
    msk_tz = pytz.timezone('Europe/Moscow')
    return datetime.now(msk_tz).year

def get_next_year():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ –≥–æ–¥–∞ –ø–æ –ú–°–ö"""
    return get_current_year() + 1

# –ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ–¥–Ω–∏—Ö –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π
def get_new_year_patterns():
    next_year = get_next_year()
    patterns = [
        fr'—Å[\s]*–Ω–æ–≤—ã–º[\s]*–≥–æ–¥–æ–º[\s]*{next_year}',
        fr'—Å[\s]*–Ω–æ–≤—ã–º[\s]*{next_year}[\s]*–≥–æ–¥–æ–º',
        fr'happy[\s]*new[\s]*year[\s]*{next_year}',
        fr'—Å[\s]*–Ω–∞—Å—Ç—É–ø–∞—é—â–∏–º[\s]*{next_year}',
        r'—Å[\s]*–Ω–æ–≤—ã–º[\s]*–≥–æ–¥–æ–º',
        r'happy[\s]*new[\s]*year',
        r'—Å[\s]*–Ω–∞—Å—Ç—É–ø–∞—é—â–∏–º',
        r'–Ω–æ–≤—ã–º[\s]*–≥–æ–¥–æ–º',
        r'—Å[\s]*–Ω–≥',
        r'—Å[\s]*–Ω–≥[\s]*\d{4}',
        fr'—Å[\s]*–Ω–≥[\s]*{next_year}',
        r'hny',
        r'hny[\s]*\d{4}',
        fr'hny[\s]*{next_year}',
        r'—Å[\s]*–Ω–∞—Å—Ç—É–ø–∞—é—â–∏–º[\s]*–Ω–≥',
        r'—Å[\s]*–ø—Ä–∞–∑–¥–Ω–∏–∫–æ–º',
        r'–ø–æ–∑–¥—Ä–∞–≤–ª—è—é[\s]*—Å[\s]*–Ω–≥',
        r'–ø–æ–∑–¥—Ä–∞–≤–ª—è—é[\s]*—Å[\s]*–Ω–æ–≤—ã–º[\s]*–≥–æ–¥–æ–º',
        fr'–ø–æ–∑–¥—Ä–∞–≤–ª—è—é[\s]*—Å[\s]*{next_year}',
        r'ny',
        r'new[\s]*year',
        r'–Ω–∞—Å—Ç—É–ø–∞—é—â–∏–º',
        r'–ø—Ä–∞–∑–¥–Ω–∏–∫–æ–º'
    ]
    return [re.compile(pattern, re.IGNORECASE) for pattern in patterns]

def get_new_year_responses():
    """–ü—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –≥–æ–¥–æ–º"""
    next_year = get_next_year()
    return [
        f"üéÑ –° –ù–æ–≤—ã–º {next_year} –ì–æ–¥–æ–º! –ü—É—Å—Ç—å —ç—Ç–æ—Ç –≥–æ–¥ –ø—Ä–∏–Ω–µ—Å–µ—Ç –º–Ω–æ–≥–æ —Å—á–∞—Å—Ç—å—è –∏ —É—Å–ø–µ—Ö–æ–≤! ‚≠ê",
        f"üéÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ! –ò –≤–∞—Å —Å –ù–æ–≤—ã–º {next_year} –ì–æ–¥–æ–º! –ñ–µ–ª–∞—é –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –∂–µ–ª–∞–Ω–∏–π! üéÅ",
        f"‚ùÑÔ∏è –° –ù–æ–≤—ã–º {next_year} –ì–æ–¥–æ–º! –ü—É—Å—Ç—å –æ–Ω –±—É–¥–µ—Ç –ø–æ–ª–æ–Ω —á—É–¥–µ—Å –∏ —Ä–∞–¥–æ—Å—Ç–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤! üåü",
        f"üéä –ò –≤–∞—Å —Å –ù–æ–≤—ã–º {next_year} –ì–æ–¥–æ–º! –°—á–∞—Å—Ç—å—è, –∑–¥–æ—Ä–æ–≤—å—è –∏ –≤—Å–µ–≥–æ —Å–∞–º–æ–≥–æ –Ω–∞–∏–ª—É—á—à–µ–≥–æ! üéÑ",
        f"‚ú® –°–ø–∞—Å–∏–±–æ! –° –ù–æ–≤—ã–º {next_year} –ì–æ–¥–æ–º! –ü—É—Å—Ç—å —ç—Ç–æ—Ç –≥–æ–¥ –±—É–¥–µ—Ç –æ—Å–æ–±–µ–Ω–Ω—ã–º! üéÖ",
        f"üåü –° –Ω–∞—Å—Ç—É–ø–∞—é—â–∏–º {next_year} –≥–æ–¥–æ–º! –ü—É—Å—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –±—É–¥–µ—Ç –Ω–∞–ø–æ–ª–Ω–µ–Ω —Ä–∞–¥–æ—Å—Ç—å—é –∏ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ–º! üéä",
        f"üéÅ –í–∑–∞–∏–º–Ω–æ –ø–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ù–æ–≤—ã–º {next_year} –ì–æ–¥–æ–º! –ñ–µ–ª–∞—é –º–æ—Ä–µ –ø–æ–∑–∏—Ç–∏–≤–∞ –∏ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–≤–µ—Ç–Ω—ã—Ö –∂–µ–ª–∞–Ω–∏–π! ‚ú®",
        f"‚≠ê –° –ù–æ–≤—ã–º {next_year} –ì–æ–¥–æ–º! –ü—É—Å—Ç—å —ç—Ç–æ—Ç –≥–æ–¥ –ø–æ–¥–∞—Ä–∏—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø–æ–≤–æ–¥–æ–≤ –¥–ª—è —É–ª—ã–±–æ–∫ –∏ —Å—á–∞—Å—Ç—å—è! üéÑ",
        f"üéà –ò –≤–∞—Å —Å –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–º! –ü—É—Å—Ç—å {next_year} –≥–æ–¥ —Å—Ç–∞–Ω–µ—Ç –≤—Ä–µ–º–µ–Ω–µ–º –≤–µ–ª–∏–∫–∏—Ö —Å–≤–µ—Ä—à–µ–Ω–∏–π! üåü",
        f"üéÜ –° –ù–æ–≤—ã–º {next_year} –ì–æ–¥–æ–º! –ñ–µ–ª–∞—é, —á—Ç–æ–±—ã —ç—Ç–æ—Ç –≥–æ–¥ –±—ã–ª –Ω–∞–ø–æ–ª–Ω–µ–Ω —è—Ä–∫–∏–º–∏ –∏ –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–º–∏ –º–æ–º–µ–Ω—Ç–∞–º–∏! üéä"
    ]

@router.message(lambda message: any(pattern.search(message.text.lower()) for pattern in get_new_year_patterns()) if message.text else False)
async def handle_new_year_greetings(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–≥–æ–¥–Ω–∏—Ö –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π"""
    response = choice(get_new_year_responses())
    await message.reply(response)

async def send_new_year_greetings(bot):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–æ–≤–æ–≥–æ–¥–Ω–∏—Ö –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π —Å –æ—Ç—Å—á–µ—Ç–æ–º"""
    msk_tz = pytz.timezone('Europe/Moscow')
    now = datetime.now(msk_tz)
    
    if now.month == 12 and now.day == 31 and now.hour == 23 and now.minute == 50:
        next_year = get_next_year()
        greeting = (
            f"üéÑ –° –ù–æ–≤—ã–º {next_year} –ì–æ–¥–æ–º! üéä\n\n"
            "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –í–∞—à –±–æ—Ç –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é –ë–¢–ö –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–∑–¥—Ä–∞–≤–∏—Ç—å –≤–∞—Å —Å –Ω–∞—Å—Ç—É–ø–ª–µ–Ω–∏–µ–º –ù–æ–≤–æ–≥–æ –ì–æ–¥–∞! üéÖ\n"
            "–ü—É—Å—Ç—å –Ω–æ–≤—ã–π –≥–æ–¥ –±—É–¥–µ—Ç –ø–æ–ª–æ–Ω —Ç–æ—á–Ω–æ—Å—Ç–∏ –∏ –ø—É–Ω–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏, –∫–∞–∫ –∏–¥–µ–∞–ª—å–Ω–æ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ! ‚ú®\n"
            "–ñ–µ–ª–∞—é –≤–∞–º –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –∂–µ–ª–∞–Ω–∏–π, –æ—Å–æ–±–µ–Ω–Ω–æ —Ç–µ—Ö, —á—Ç–æ —Å–≤—è–∑–∞–Ω—ã —Å —É—Å–ø–µ—à–Ω–æ–π —Å–¥–∞—á–µ–π —Å–µ—Å—Å–∏–π –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ–º –∞–≤—Ç–æ–º–∞—Ç–æ–≤! üåü\n\n"
            "–í–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é –ë–¢K"
        )
        db = Database()
        users = await db.get_all_users()
        
        tasks = []
        for user in users:
            try:
                user_id = int(user['user_id'])
                tasks.append(bot.send_message(chat_id=user_id, text=greeting))
                logger.info(f"–ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–≥–æ–¥–Ω–µ–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
        await asyncio.gather(*tasks)

# # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏ –¥—Ä—É–≥–∏–µ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
# @router.message(Command("holiday"))
# async def show_holiday_commands(message: Message):
#     """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã—Ö –∫–æ–º–∞–Ω–¥"""
#     commands = (
#         "üéÑ –ü—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n"
#         "‚Ä¢ –ü–æ–∑–¥—Ä–∞–≤—å—Ç–µ –±–æ—Ç–∞ —Å –ù–æ–≤—ã–º –ì–æ–¥–æ–º\n"
#         "‚Ä¢ /holiday - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
#     )
#     await message.answer(commands)
    
# @router.message(Command("test_countdown"))
# async def test_new_year_countdown(message: Message):
#     """–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ –Ω–æ–≤–æ–≥–æ–¥–Ω–µ–≥–æ –æ—Ç—Å—á—ë—Ç–∞ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
#     next_year = get_next_year()
#     greeting = (
#         f"üéÑ –° –ù–æ–≤—ã–º {next_year} –ì–æ–¥–æ–º! üéä\n\n"
#         "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –í–∞—à –±–æ—Ç –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é –ë–¢–ö –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–∑–¥—Ä–∞–≤–∏—Ç—å –≤–∞—Å —Å –Ω–∞—Å—Ç—É–ø–ª–µ–Ω–∏–µ–º –ù–æ–≤–æ–≥–æ –ì–æ–¥–∞! üéÖ\n"
#         "–ü—É—Å—Ç—å –Ω–æ–≤—ã–π –≥–æ–¥ –±—É–¥–µ—Ç –ø–æ–ª–æ–Ω —Ç–æ—á–Ω–æ—Å—Ç–∏ –∏ –ø—É–Ω–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏, –∫–∞–∫ –∏–¥–µ–∞–ª—å–Ω–æ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ! ‚ú®\n"
#         "–ñ–µ–ª–∞—é –≤–∞–º –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –∂–µ–ª–∞–Ω–∏–π, –æ—Å–æ–±–µ–Ω–Ω–æ —Ç–µ—Ö, —á—Ç–æ —Å–≤—è–∑–∞–Ω—ã —Å —É—Å–ø–µ—à–Ω–æ–π —Å–¥–∞—á–µ–π —Å–µ—Å—Å–∏–π –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ–º –∞–≤—Ç–æ–º–∞—Ç–æ–≤! üåü\n\n"
#         "–° —é–º–æ—Ä–æ–º –∏ –Ω–∞–∏–ª—É—á—à–∏–º–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è–º–∏,\n"
#         "–í–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é –ë–¢K"
#     )

#     db = Database()
#     users = await db.get_all_users()
    
#     tasks = []
#     for user in users:
#         try:
#             user_id = int(user['user_id'])
#             tasks.append(message.bot.send_message(chat_id=user_id, text=greeting))
#             logger.info(f"–ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –Ω–æ–≤–æ–≥–æ–¥–Ω–µ–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
#         except Exception as e:
#             logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
#             continue
    
#     # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ        
#     await asyncio.gather(*tasks)
#     await message.answer("‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –Ω–æ–≤–æ–≥–æ–¥–Ω–∏—Ö –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
